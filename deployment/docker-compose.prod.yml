version: '3.8'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://backend:8000
        - NEXT_PUBLIC_CDN_URL=https://your-cdn.example.com
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - DATABASE_URL=sqlite:///./data/flipbook.db
      - REDIS_URL=redis://redis:6379
      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME}
      - R2_ENDPOINT_URL=${R2_ENDPOINT_URL}
      - R2_PUBLIC_URL=${R2_PUBLIC_URL}
    volumes:
      - ./data:/app/data
    depends_on:
      - redis

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.tasks.celery_tasks worker --loglevel=info --concurrency=2
    environment:
      - DEBUG=false
      - DATABASE_URL=sqlite:///./data/flipbook.db
      - REDIS_URL=redis://redis:6379
      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME}
      - R2_ENDPOINT_URL=${R2_ENDPOINT_URL}
      - R2_PUBLIC_URL=${R2_PUBLIC_URL}
    volumes:
      - ./data:/app/data
    depends_on:
      - redis
      - backend

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.tasks.celery_tasks beat --loglevel=info
    environment:
      - DEBUG=false
      - DATABASE_URL=sqlite:///./data/flipbook.db
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./data:/app/data
    depends_on:
      - redis
      - backend

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend

volumes:
  redis_data: